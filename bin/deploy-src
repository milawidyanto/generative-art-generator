#!/bin/bash

if [[ $# -ne 0 && $# -ne 2 || ($# -eq 2 && $1 != "-m") ]]; then
    echo -e "Usage: $0 [-m <release-string>]"
    exit 1
fi

set -e

PROJECT=$(get-conf -k project)
PROJECT_TYPE=$(get-conf -k project_type)
USER=$(get-properties -k user)
SOURCE_DIR=$(get-conf -k source_dir)
OOZIE_DIR=$(get-conf -k oozie_dir)
MAIN_SPARK_SCRIPT=$(get-conf -k main_spark_script)
BUILD_DIR=/tmp/scaffolding/$$/build
RELEASE=$2

echo "Copying source code to HDFS... ($SOURCE_DIR)"
hdfs dfs -mkdir -p $PROJECT/build/

if [[ $PROJECT_TYPE == "hive" ]]; then
    hdfs dfs -copyFromLocal -f $SOURCE_DIR/* $PROJECT/build/
elif [[ $PROJECT_TYPE == "pyspark" ]]; then
    (cd $SOURCE_DIR && zip -r --exclude='*__pycache__*' $BUILD_DIR/src.zip *)
    hdfs dfs -copyFromLocal -f $BUILD_DIR/src.zip $PROJECT/build/

    echo "Copying main script to HDFS..."
    hdfs dfs -copyFromLocal -f $MAIN_SPARK_SCRIPT $PROJECT/build/
else
    echo "Project Type not supported: $PROJECT_TYPE"
    exit 1
fi

echo "Copying Oozie files to HDFS..."
hdfs dfs -copyFromLocal -f $OOZIE_DIR/* $PROJECT/build/
get-properties | hdfs dfs -put -f - $PROJECT/build/job.properties

echo "Generating RELEASE file..."
echo "$PROJECT|$USER|$(date)|$RELEASE" | hdfs dfs -put -f - $PROJECT/build/RELEASE


